version: "3"

networks:
  service:
    driver: bridge

volumes:
  db_data:
    driver: local

services:
  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    ports:
      - "${PORT:-80}:80"
    networks:
      - service
    depends_on:
      - backend
      - frontend

  backend:
    build:
      context: ../backend
      dockerfile: .build/app/Dockerfile
    networks:
      - service
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ../frontend
      dockerfile: .build/app/Dockerfile
    entrypoint: ["/bin/sh", "-c", "npm run serve -- --port 3000"]
    networks:
      - service


  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${USER:-user}
      POSTGRES_PASSWORD: ${PASSWORD:-password}
      POSTGRES_DB: ${DB:-postgres}
    networks:
      - service
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}" ]
      interval: 5s
      timeout: 25s
      retries: 10
